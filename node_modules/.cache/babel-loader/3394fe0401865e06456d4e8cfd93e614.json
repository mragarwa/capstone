{"ast":null,"code":"var _jsxFileName = \"/Users/mansiagarwal/Desktop/Capstone/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport Box from '@material-ui/core/Box';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SimpleTabs from './components/collab-content.js';\nimport Questions from './components/content.js';\nimport Refresher from './components/refresher.js';\nimport Call from './components/session.js';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport CreateIcon from '@material-ui/icons/Create';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport PersonIcon from '@material-ui/icons/Person';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#784af4'\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18\n  }\n}); // Handling status of what page in the steppers is active\n\nfunction QontoStepIcon(props) {\n  _s();\n\n  const classes = useQontoStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    children: completed ? /*#__PURE__*/_jsxDEV(Check, {\n      className: classes.completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.circle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 64\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n} // Assigning bool value to active status\n\n\n_s(QontoStepIcon, \"zRam3KVaNpVBlW51GPG1kex6cwg=\", false, function () {\n  return [useQontoStepIconStyles];\n});\n\n_c = QontoStepIcon;\nQontoStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool\n}; // Style for stepper\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundColor: '#FC6D78'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundColor: '#FDA2A9'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#DDEEF9',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#DDEEF9',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundColor: '#FC6D78',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundColor: '#FDA2A9'\n  },\n  space: {\n    marginTop: 100\n  }\n}); // Icons for each step in stepper\n\nfunction ColorlibStepIcon(props) {\n  _s2();\n\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 10\n    }, this),\n    2: /*#__PURE__*/_jsxDEV(VoiceChatIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }, this),\n    3: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 10\n    }, this),\n    4: /*#__PURE__*/_jsxDEV(QuestionAnswerIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 10\n    }, this),\n    5: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 10\n    }, this),\n    6: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 10\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    children: icons[String(props.icon)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(ColorlibStepIcon, \"TbUAg343/d/fVF4s63V6GVaUi8k=\", false, function () {\n  return [useColorlibStepIconStyles];\n});\n\n_c2 = ColorlibStepIcon;\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n})); // Assigning names to each step\n\nfunction getSteps() {\n  return ['MI Refresher', 'Practice Session', 'Discussion Prep', 'Collaborative Discussion', 'Self-Reflection', 'Complete'];\n} // Assigning content of each step\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(Refresher, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 16\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(Call, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 16\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(Questions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 16\n      }, this);\n\n    case 3:\n      return /*#__PURE__*/_jsxDEV(SimpleTabs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 16\n      }, this);\n\n    case 4:\n      return '*Insert Self-Reflection Content*';\n\n    default:\n      return 'Unknown step';\n  }\n} // main function that renders content\n\n\nexport default function App() {\n  _s3();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(1);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      connector: /*#__PURE__*/_jsxDEV(ColorlibConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 70\n      }, this),\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          StepIconComponent: ColorlibStepIcon,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.instructions,\n            children: \"Congratulations! You have successfully finished today\\u2019s session in Pin-MI.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleReset,\n            className: classes.button,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.instructions,\n            children: getStepContent(activeStep)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              disabled: activeStep === 1,\n              onClick: handleBack,\n              className: classes.button,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: activeStep === 3,\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleNext,\n              className: classes.button,\n              children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(App, \"TdoGtQwrKhHoUpn8RF3+b/zEF2o=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QontoStepIcon\");\n$RefreshReg$(_c2, \"ColorlibStepIcon\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/mansiagarwal/Desktop/Capstone/src/App.js"],"names":["React","PropTypes","makeStyles","withStyles","clsx","Stepper","Step","Box","StepLabel","Check","StepConnector","Button","Typography","SimpleTabs","Questions","Refresher","Call","VoiceChatIcon","CreateIcon","QuestionAnswerIcon","PersonIcon","RefreshIcon","DoneIcon","useQontoStepIconStyles","root","color","display","height","alignItems","active","circle","width","borderRadius","backgroundColor","completed","zIndex","fontSize","QontoStepIcon","props","classes","propTypes","bool","ColorlibConnector","alternativeLabel","top","line","border","useColorlibStepIconStyles","justifyContent","boxShadow","space","marginTop","ColorlibStepIcon","icons","String","icon","node","useStyles","theme","button","marginRight","spacing","instructions","marginBottom","getSteps","getStepContent","step","App","activeStep","setActiveStep","useState","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport Box from '@material-ui/core/Box';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SimpleTabs from './components/collab-content.js';\nimport Questions from './components/content.js';\nimport Refresher from './components/refresher.js';\nimport Call from './components/session.js';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport CreateIcon from '@material-ui/icons/Create';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport PersonIcon from '@material-ui/icons/Person';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport DoneIcon from '@material-ui/icons/Done';\n\n\n\n  const useQontoStepIconStyles = makeStyles({\n    root: {\n      color: '#eaeaf0',\n      display: 'flex',\n      height: 22,\n      alignItems: 'center',\n    },\n    active: {\n      color: '#784af4',\n    },\n    circle: {\n      width: 8,\n      height: 8,\n      borderRadius: '50%',\n      backgroundColor: 'currentColor',\n    },\n    completed: {\n      color: '#784af4',\n      zIndex: 1,\n      fontSize: 18,\n    },\n  });\n  \n\n  // Handling status of what page in the steppers is active\n  function QontoStepIcon(props) {\n    const classes = useQontoStepIconStyles();\n    const { active, completed } = props;\n  \n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active,\n        })}\n      >\n        {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n      </div>\n    );\n  }\n  \n  // Assigning bool value to active status\n  QontoStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     */\n    active: PropTypes.bool,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     */\n    completed: PropTypes.bool,\n  };\n  \n  // Style for stepper\n  const ColorlibConnector = withStyles({\n    alternativeLabel: {\n      top: 22,\n    },\n    active: {\n      '& $line': {\n        backgroundColor:\n        '#FC6D78',\n        \n      },\n    },\n    completed: {\n      '& $line': {\n        backgroundColor:\n        '#FDA2A9',\n      },\n    },\n    line: {\n      height: 3,\n      border: 0,\n      backgroundColor: '#DDEEF9',\n      borderRadius: 1,\n    },\n  })(StepConnector);\n  \n  const useColorlibStepIconStyles = makeStyles({\n    root: {\n      backgroundColor: '#DDEEF9',\n      zIndex: 1,\n      color: '#fff',\n      width: 50,\n      height: 50,\n      display: 'flex',\n      borderRadius: '50%',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    active: {\n      backgroundColor:\n        '#FC6D78',\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    },\n    completed: {\n      backgroundColor:\n        '#FDA2A9',\n    },\n    space: {\n      marginTop: 100,\n    }\n  });\n  \n  // Icons for each step in stepper\n  function ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n    const { active, completed } = props;\n  \n    const icons = {\n      1: <RefreshIcon />,\n      2: <VoiceChatIcon />,\n      3: <CreateIcon />,\n      4: <QuestionAnswerIcon />,\n      5: <PersonIcon />,\n      6: <DoneIcon />\n    };\n  \n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active,\n          [classes.completed]: completed,\n        })}\n      >\n        {icons[String(props.icon)]}\n      </div>\n    );\n  }\n  \n  ColorlibStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     */\n    active: PropTypes.bool,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     */\n    completed: PropTypes.bool,\n    /**\n     * The label displayed in the step icon.\n     */\n    icon: PropTypes.node,\n  };\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n      \n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }));\n  \n  // Assigning names to each step\n  function getSteps() {\n    return ['MI Refresher', 'Practice Session', 'Discussion Prep', 'Collaborative Discussion', 'Self-Reflection', 'Complete'];\n  }\n  \n  // Assigning content of each step\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return <Refresher />;\n      case 1:\n        return <Call />;\n      case 2:\n        return <Questions />;\n      case 3:\n        return <SimpleTabs />;\n      case 4:\n        return '*Insert Self-Reflection Content*'\n      default:\n        return 'Unknown step';\n    }\n  }\n  \n  // main function that renders content\n  export default function App() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(1);\n    const steps = getSteps();\n  \n    const handleNext = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n  \n    const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n  \n    const handleReset = () => {\n      setActiveStep(1);\n    };\n  \n    return (\n      <div className={classes.root}>\n        <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <div>\n        <Box display=\"flex\" justifyContent=\"center\" >\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n              Congratulations! You have successfully finished today’s session in Pin-MI.\n              </Typography>\n              <Button onClick={handleReset} className={classes.button}>\n              Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button disabled={activeStep === 1} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                <Button\n                  disabled={activeStep === 3}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n          </Box>\n        </div>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}