{"ast":null,"code":"import loadScript from 'load-script';\nimport merge from 'deepmerge';\nconst MATCH_START_QUERY = /[?&#](?:start|t)=([0-9hms]+)/;\nconst MATCH_END_QUERY = /[?&#]end=([0-9hms]+)/;\nconst MATCH_START_STAMP = /(\\d+)(h|m|s)/g;\nconst MATCH_NUMERIC = /^\\d+$/; // Parse YouTube URL for a start time param, ie ?t=1h14m30s\n// and return the start time in seconds\n\nfunction parseTimeParam(url, pattern) {\n  if (url instanceof Array) {\n    return undefined;\n  }\n\n  const match = url.match(pattern);\n\n  if (match) {\n    const stamp = match[1];\n\n    if (stamp.match(MATCH_START_STAMP)) {\n      return parseTimeString(stamp);\n    }\n\n    if (MATCH_NUMERIC.test(stamp)) {\n      return parseInt(stamp);\n    }\n  }\n\n  return undefined;\n}\n\nfunction parseTimeString(stamp) {\n  let seconds = 0;\n  let array = MATCH_START_STAMP.exec(stamp);\n\n  while (array !== null) {\n    const [, count, period] = array;\n    if (period === 'h') seconds += parseInt(count, 10) * 60 * 60;\n    if (period === 'm') seconds += parseInt(count, 10) * 60;\n    if (period === 's') seconds += parseInt(count, 10);\n    array = MATCH_START_STAMP.exec(stamp);\n  }\n\n  return seconds;\n}\n\nexport function parseStartTime(url) {\n  return parseTimeParam(url, MATCH_START_QUERY);\n}\nexport function parseEndTime(url) {\n  return parseTimeParam(url, MATCH_END_QUERY);\n} // http://stackoverflow.com/a/38622545\n\nexport function randomString() {\n  return Math.random().toString(36).substr(2, 5);\n}\nexport function queryString(object) {\n  return Object.keys(object).map(key => `${key}=${object[key]}`).join('&');\n}\n\nfunction getGlobal(key) {\n  if (window[key]) {\n    return window[key];\n  }\n\n  if (window.exports && window.exports[key]) {\n    return window.exports[key];\n  }\n\n  if (window.module && window.module.exports && window.module.exports[key]) {\n    return window.module.exports[key];\n  }\n\n  return null;\n} // Util function to load an external SDK\n// or return the SDK if it is already loaded\n\n\nconst requests = {};\nexport function getSDK(url, sdkGlobal, sdkReady = null, isLoaded = () => true, fetchScript = loadScript) {\n  const existingGlobal = getGlobal(sdkGlobal);\n\n  if (existingGlobal && isLoaded(existingGlobal)) {\n    return Promise.resolve(existingGlobal);\n  }\n\n  return new Promise((resolve, reject) => {\n    // If we are already loading the SDK, add the resolve and reject\n    // functions to the existing array of requests\n    if (requests[url]) {\n      requests[url].push({\n        resolve,\n        reject\n      });\n      return;\n    }\n\n    requests[url] = [{\n      resolve,\n      reject\n    }];\n\n    const onLoaded = sdk => {\n      // When loaded, resolve all pending request promises\n      requests[url].forEach(request => request.resolve(sdk));\n    };\n\n    if (sdkReady) {\n      const previousOnReady = window[sdkReady];\n\n      window[sdkReady] = function () {\n        if (previousOnReady) previousOnReady();\n        onLoaded(getGlobal(sdkGlobal));\n      };\n    }\n\n    fetchScript(url, err => {\n      if (err) {\n        // Loading the SDK failed – reject all requests and\n        // reset the array of requests for this SDK\n        requests[url].forEach(request => request.reject(err));\n        requests[url] = null;\n      } else if (!sdkReady) {\n        onLoaded(getGlobal(sdkGlobal));\n      }\n    });\n  });\n}\nexport function getConfig(props, defaultProps) {\n  return merge(defaultProps.config, props.config);\n}\nexport function omit(object, ...arrays) {\n  const omitKeys = [].concat(...arrays);\n  const output = {};\n  const keys = Object.keys(object);\n\n  for (const key of keys) {\n    if (omitKeys.indexOf(key) === -1) {\n      output[key] = object[key];\n    }\n  }\n\n  return output;\n}\nexport function callPlayer(method, ...args) {\n  // Util method for calling a method on this.player\n  // but guard against errors and console.warn instead\n  if (!this.player || !this.player[method]) {\n    let message = `ReactPlayer: ${this.constructor.displayName} player could not call %c${method}%c – `;\n\n    if (!this.player) {\n      message += 'The player was not available';\n    } else if (!this.player[method]) {\n      message += 'The method was not available';\n    }\n\n    console.warn(message, 'font-weight: bold', '');\n    return null;\n  }\n\n  return this.player[method](...args);\n}\nexport function isMediaStream(url) {\n  return typeof window !== 'undefined' && typeof window.MediaStream !== 'undefined' && url instanceof window.MediaStream;\n}\nexport function isBlobUrl(url) {\n  return /^blob:/.test(url);\n}\nexport function supportsWebKitPresentationMode(video = document.createElement('video')) {\n  // Check if Safari supports PiP, and is not on mobile (other than iPad)\n  // iPhone safari appears to \"support\" PiP through the check, however PiP does not function\n  const notMobile = /iPhone|iPod/.test(navigator.userAgent) === false;\n  return video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function' && notMobile;\n}","map":{"version":3,"sources":["/Users/mansiagarwal/Desktop/Capstone/src/utils.js"],"names":["loadScript","merge","MATCH_START_QUERY","MATCH_END_QUERY","MATCH_START_STAMP","MATCH_NUMERIC","parseTimeParam","url","pattern","Array","undefined","match","stamp","parseTimeString","test","parseInt","seconds","array","exec","count","period","parseStartTime","parseEndTime","randomString","Math","random","toString","substr","queryString","object","Object","keys","map","key","join","getGlobal","window","exports","module","requests","getSDK","sdkGlobal","sdkReady","isLoaded","fetchScript","existingGlobal","Promise","resolve","reject","push","onLoaded","sdk","forEach","request","previousOnReady","err","getConfig","props","defaultProps","config","omit","arrays","omitKeys","concat","output","indexOf","callPlayer","method","args","player","message","constructor","displayName","console","warn","isMediaStream","MediaStream","isBlobUrl","supportsWebKitPresentationMode","video","document","createElement","notMobile","navigator","userAgent","webkitSupportsPresentationMode","webkitSetPresentationMode"],"mappings":"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","sourcesContent":["import loadScript from 'load-script'\nimport merge from 'deepmerge'\n\nconst MATCH_START_QUERY = /[?&#](?:start|t)=([0-9hms]+)/\nconst MATCH_END_QUERY = /[?&#]end=([0-9hms]+)/\nconst MATCH_START_STAMP = /(\\d+)(h|m|s)/g\nconst MATCH_NUMERIC = /^\\d+$/\n\n// Parse YouTube URL for a start time param, ie ?t=1h14m30s\n// and return the start time in seconds\nfunction parseTimeParam (url, pattern) {\n  if (url instanceof Array) {\n    return undefined\n  }\n  const match = url.match(pattern)\n  if (match) {\n    const stamp = match[1]\n    if (stamp.match(MATCH_START_STAMP)) {\n      return parseTimeString(stamp)\n    }\n    if (MATCH_NUMERIC.test(stamp)) {\n      return parseInt(stamp)\n    }\n  }\n  return undefined\n}\n\nfunction parseTimeString (stamp) {\n  let seconds = 0\n  let array = MATCH_START_STAMP.exec(stamp)\n  while (array !== null) {\n    const [, count, period] = array\n    if (period === 'h') seconds += parseInt(count, 10) * 60 * 60\n    if (period === 'm') seconds += parseInt(count, 10) * 60\n    if (period === 's') seconds += parseInt(count, 10)\n    array = MATCH_START_STAMP.exec(stamp)\n  }\n  return seconds\n}\n\nexport function parseStartTime (url) {\n  return parseTimeParam(url, MATCH_START_QUERY)\n}\n\nexport function parseEndTime (url) {\n  return parseTimeParam(url, MATCH_END_QUERY)\n}\n\n// http://stackoverflow.com/a/38622545\nexport function randomString () {\n  return Math.random().toString(36).substr(2, 5)\n}\n\nexport function queryString (object) {\n  return Object\n    .keys(object)\n    .map(key => `${key}=${object[key]}`)\n    .join('&')\n}\n\nfunction getGlobal (key) {\n  if (window[key]) {\n    return window[key]\n  }\n  if (window.exports && window.exports[key]) {\n    return window.exports[key]\n  }\n  if (window.module && window.module.exports && window.module.exports[key]) {\n    return window.module.exports[key]\n  }\n  return null\n}\n\n// Util function to load an external SDK\n// or return the SDK if it is already loaded\nconst requests = {}\nexport function getSDK (url, sdkGlobal, sdkReady = null, isLoaded = () => true, fetchScript = loadScript) {\n  const existingGlobal = getGlobal(sdkGlobal)\n  if (existingGlobal && isLoaded(existingGlobal)) {\n    return Promise.resolve(existingGlobal)\n  }\n  return new Promise((resolve, reject) => {\n    // If we are already loading the SDK, add the resolve and reject\n    // functions to the existing array of requests\n    if (requests[url]) {\n      requests[url].push({ resolve, reject })\n      return\n    }\n    requests[url] = [{ resolve, reject }]\n    const onLoaded = sdk => {\n      // When loaded, resolve all pending request promises\n      requests[url].forEach(request => request.resolve(sdk))\n    }\n    if (sdkReady) {\n      const previousOnReady = window[sdkReady]\n      window[sdkReady] = function () {\n        if (previousOnReady) previousOnReady()\n        onLoaded(getGlobal(sdkGlobal))\n      }\n    }\n    fetchScript(url, err => {\n      if (err) {\n        // Loading the SDK failed – reject all requests and\n        // reset the array of requests for this SDK\n        requests[url].forEach(request => request.reject(err))\n        requests[url] = null\n      } else if (!sdkReady) {\n        onLoaded(getGlobal(sdkGlobal))\n      }\n    })\n  })\n}\n\nexport function getConfig (props, defaultProps) {\n  return merge(defaultProps.config, props.config)\n}\n\nexport function omit (object, ...arrays) {\n  const omitKeys = [].concat(...arrays)\n  const output = {}\n  const keys = Object.keys(object)\n  for (const key of keys) {\n    if (omitKeys.indexOf(key) === -1) {\n      output[key] = object[key]\n    }\n  }\n  return output\n}\n\nexport function callPlayer (method, ...args) {\n  // Util method for calling a method on this.player\n  // but guard against errors and console.warn instead\n  if (!this.player || !this.player[method]) {\n    let message = `ReactPlayer: ${this.constructor.displayName} player could not call %c${method}%c – `\n    if (!this.player) {\n      message += 'The player was not available'\n    } else if (!this.player[method]) {\n      message += 'The method was not available'\n    }\n    console.warn(message, 'font-weight: bold', '')\n    return null\n  }\n  return this.player[method](...args)\n}\n\nexport function isMediaStream (url) {\n  return (\n    typeof window !== 'undefined' &&\n    typeof window.MediaStream !== 'undefined' &&\n    url instanceof window.MediaStream\n  )\n}\n\nexport function isBlobUrl (url) {\n  return /^blob:/.test(url)\n}\n\nexport function supportsWebKitPresentationMode (video = document.createElement('video')) {\n  // Check if Safari supports PiP, and is not on mobile (other than iPad)\n  // iPhone safari appears to \"support\" PiP through the check, however PiP does not function\n  const notMobile = /iPhone|iPod/.test(navigator.userAgent) === false\n  return video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function' && notMobile\n}"]},"metadata":{},"sourceType":"module"}