{"ast":null,"code":"var _jsxFileName = \"/Users/mansiagarwal/Desktop/Capstone/pin-mi/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SimpleTabs from './components/collab-content.js';\nimport Questions from './components/content.js';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport CreateIcon from '@material-ui/icons/Create';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport PersonIcon from '@material-ui/icons/Person';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)'\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#784af4'\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nfunction QontoStepIcon(props) {\n  _s();\n\n  const classes = useQontoStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    children: completed ? /*#__PURE__*/_jsxDEV(Check, {\n      className: classes.completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.circle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 64\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n\n_s(QontoStepIcon, \"zRam3KVaNpVBlW51GPG1kex6cwg=\", false, function () {\n  return [useQontoStepIconStyles];\n});\n\n_c = QontoStepIcon;\nQontoStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool\n};\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundColor: '#FC6D78'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundColor: '#FDA2A9'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#337E92',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundColor: '#FC6D78',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundColor: '#FDA2A9'\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  _s2();\n\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 10\n    }, this),\n    2: /*#__PURE__*/_jsxDEV(VoiceChatIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 10\n    }, this),\n    3: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 10\n    }, this),\n    4: /*#__PURE__*/_jsxDEV(QuestionAnswerIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 10\n    }, this),\n    5: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 10\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    children: icons[String(props.icon)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(ColorlibStepIcon, \"TbUAg343/d/fVF4s63V6GVaUi8k=\", false, function () {\n  return [useColorlibStepIconStyles];\n});\n\n_c2 = ColorlibStepIcon;\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['MI Refresher', 'Practice Session', 'Discussion Prep', 'Collaborative Discussion', 'Self-Reflection'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(Questions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 16\n      }, this);\n\n    case 3:\n      return /*#__PURE__*/_jsxDEV(SimpleTabs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 16\n      }, this);\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function Reflection() {\n  _s3();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(1);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      connector: /*#__PURE__*/_jsxDEV(ColorlibConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 70\n      }, this),\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          StepIconComponent: ColorlibStepIcon,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            className: classes.button,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            className: classes.button,\n            children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(Reflection, \"TdoGtQwrKhHoUpn8RF3+b/zEF2o=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Reflection;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QontoStepIcon\");\n$RefreshReg$(_c2, \"ColorlibStepIcon\");\n$RefreshReg$(_c3, \"Reflection\");","map":{"version":3,"sources":["/Users/mansiagarwal/Desktop/Capstone/pin-mi/src/App.js"],"names":["React","PropTypes","makeStyles","withStyles","clsx","Stepper","Step","StepLabel","Check","StepConnector","Button","Typography","SimpleTabs","Questions","VoiceChatIcon","CreateIcon","QuestionAnswerIcon","PersonIcon","RefreshIcon","QontoConnector","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","useQontoStepIconStyles","root","color","display","height","alignItems","circle","width","backgroundColor","zIndex","fontSize","QontoStepIcon","props","classes","propTypes","bool","ColorlibConnector","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","String","icon","node","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","Reflection","activeStep","setActiveStep","useState","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SimpleTabs from './components/collab-content.js';\nimport Questions from './components/content.js';\nimport VoiceChatIcon from '@material-ui/icons/VoiceChat';\nimport CreateIcon from '@material-ui/icons/Create';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport PersonIcon from '@material-ui/icons/Person';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst QontoConnector = withStyles({\n    alternativeLabel: {\n      top: 10,\n      left: 'calc(-50% + 16px)',\n      right: 'calc(50% + 16px)',\n    },\n    active: {\n      '& $line': {\n        borderColor: '#784af4',\n      },\n    },\n    completed: {\n      '& $line': {\n        borderColor: '#784af4',\n      },\n    },\n    line: {\n      borderColor: '#eaeaf0',\n      borderTopWidth: 3,\n      borderRadius: 1,\n    },\n  })(StepConnector);\n  \n  const useQontoStepIconStyles = makeStyles({\n    root: {\n      color: '#eaeaf0',\n      display: 'flex',\n      height: 22,\n      alignItems: 'center',\n    },\n    active: {\n      color: '#784af4',\n    },\n    circle: {\n      width: 8,\n      height: 8,\n      borderRadius: '50%',\n      backgroundColor: 'currentColor',\n    },\n    completed: {\n      color: '#784af4',\n      zIndex: 1,\n      fontSize: 18,\n    },\n  });\n  \n  function QontoStepIcon(props) {\n    const classes = useQontoStepIconStyles();\n    const { active, completed } = props;\n  \n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active,\n        })}\n      >\n        {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n      </div>\n    );\n  }\n  \n  QontoStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     */\n    active: PropTypes.bool,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     */\n    completed: PropTypes.bool,\n  };\n  \n  const ColorlibConnector = withStyles({\n    alternativeLabel: {\n      top: 22,\n    },\n    active: {\n      '& $line': {\n        backgroundColor:\n        '#FC6D78',\n        \n      },\n    },\n    completed: {\n      '& $line': {\n        backgroundColor:\n        '#FDA2A9',\n      },\n    },\n    line: {\n      height: 3,\n      border: 0,\n      backgroundColor: '#eaeaf0',\n      borderRadius: 1,\n    },\n  })(StepConnector);\n  \n  const useColorlibStepIconStyles = makeStyles({\n    root: {\n      backgroundColor: '#337E92',\n      zIndex: 1,\n      color: '#fff',\n      width: 50,\n      height: 50,\n      display: 'flex',\n      borderRadius: '50%',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    active: {\n      backgroundColor:\n        '#FC6D78',\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    },\n    completed: {\n      backgroundColor:\n        '#FDA2A9',\n    },\n  });\n  \n  function ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n    const { active, completed } = props;\n  \n    const icons = {\n      1: <RefreshIcon />,\n      2: <VoiceChatIcon />,\n      3: <CreateIcon />,\n      4: <QuestionAnswerIcon />,\n      5: <PersonIcon />\n    };\n  \n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active,\n          [classes.completed]: completed,\n        })}\n      >\n        {icons[String(props.icon)]}\n      </div>\n    );\n  }\n  \n  ColorlibStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     */\n    active: PropTypes.bool,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     */\n    completed: PropTypes.bool,\n    /**\n     * The label displayed in the step icon.\n     */\n    icon: PropTypes.node,\n  };\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }));\n  \n  function getSteps() {\n    return ['MI Refresher', 'Practice Session', 'Discussion Prep', 'Collaborative Discussion', 'Self-Reflection'];\n  }\n  \n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return 'Select campaign settings...';\n      case 1:\n        return 'What is an ad group anyways?';\n      case 2:\n        return <Questions />;\n      case 3:\n        return <SimpleTabs />\n      default:\n        return 'Unknown step';\n    }\n  }\n  \n  export default function Reflection() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(1);\n    const steps = getSteps();\n  \n    const handleNext = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n  \n    const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n  \n    const handleReset = () => {\n      setActiveStep(0);\n    };\n  \n    return (\n      <div className={classes.root}>\n        <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}